window.log = function f(){ log.history = log.history || []; log.history.push(arguments); if(this.console) { var args = arguments, newarr; args.callee = args.callee.caller; newarr = [].slice.call(args); if (typeof console.log === 'object') log.apply.call(console.log, console, newarr); else console.log.apply(console, newarr);}};
(function(a){function b(){}for(var c="assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn".split(","),d;!!(d=c.pop());){a[d]=a[d]||b;}})
(function(){try{console.log();return window.console;}catch(a){return (window.console={});}}());

/**
 * Console.js
 */
(function($){function splitPath(a){var b=a.split(" ");if(b.length>0){var c=b[0];b.shift();b=[b.join(" ")];b.unshift(c);return b}else{return""}}var Terminal=function(element,options){var elem=$(element);var obj=this;var logs=[];var commandsHelp={help:"Display all the commands available.",clear:"Clear the terminal.",alert:"Display a highlighted message.",history:"Show previous commands entered.","!!":"Load previous command","=========== REMOTELY CALL THESE IN YOUR JAVASCRIPT ===========":"",'terminal.parseMsg("message")':"Call any of the above, as you would type, in your code",'terminal.addMsg("message","color")':"Send message in specific colour to terminal"};var settings=$.extend({background:"#222",color:"#FFF",size:"12px",prefix:">"},options||{});var checkMessage=function(msg){if(msg){var msg=msg.toLowerCase();var split=splitPath(msg);switch(split[0]){case"help":var helpc="";$.each(commandsHelp,function(a,b){var c=a+" : "+b;helpc+=c+"<br />"});addMessage(helpc,"#FFF");break;case"clear":$("#log").html("");break;case"alert":addMessage(split[1],"rgb(255, 204, 102)");break;case"history":if(split[1]=="clear"){logs=[];break}var history=logs.reverse();var log="";for(var i=0;i<history.length;i++){var cmd=logs[i].join(" ");log=log+"<br />"+cmd}addMessage(log,"#FFF");break;case"!!":var cmd=logs[0].join(" ");$(".insert").val(cmd);break;case"eval":try{var sum=eval(split[1]);addMessage(sum,"#FFF")}catch(err){addMessage(err,"#FFF")}break;default:addMessage(msg,"#FFF")}logs.unshift(split)}};var addMessage=function(a,b){$("#log").append('<p class="msg" style="color:'+b+'">> '+a+"</p>");$("#log").animate({scrollTop:$("#log").prop("scrollHeight")-$("#log").height()},100)};this.addMsg=function(a,b){addMessage(a,b)};this.parseMsg=function(a){checkMessage(a)};this.clear=function(){$("#log").html("")};elem.css("color",settings.color).css("background-color",settings.background).css("font-size",settings.size);elem.append('<div id="log"></div>');elem.append('<form class="consoleInput"><span>'+settings.prefix+'</span><input type="text" class="insert" value=\'\' /></form>');$(".consoleInput").submit(function(){var a=$(".insert").val();$(".insert").val("");checkMessage(a);return false})};$.fn.terminal=function(a){return this.each(function(){var b=$(this);if(b.data("terminal"))return;var c=new Terminal(this,a);b.data("terminal",c)})}})(window.jQuery)


